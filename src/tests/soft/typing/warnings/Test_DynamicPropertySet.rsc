module tests::soft::typing::warnings::Test_DynamicPropertySet

import lang::php::analysis::cfg::Label;
import soft::typing::php::elements::Identifier;
import soft::typing::php::constraints::ConstraintHelper;
import soft::typing::php::Utils::Analysis;
import tests::soft::typing::php::helper::Test_SetComparator;

import soft::typing::php::declarations::PublicDataTypes;

private loc localP=rootP+"Test_DynamicPropertySet";

test bool test_DynamicPropertySetA()
{
	fileTest="DynamicPropertySetA.php";
	exitEnvm=runAnalysis(localP,fileTest);

	expectInfo= <(
	 "Test.instanceFunc":(
	    lab(5):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(44):(
	      var("this"):nullTypeRoot(),
	      var("x"):nullTypeRoot()
	    ),
	    lab(46):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(9):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(45):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(13):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    )
	  ),
	  "DynamicPropertySetA.php":(
	    lab(23):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):typeSet({Float()})),
	              "Test",
	              {}))})),
	    lab(18):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})),
	    lab(28):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))})),
	    lab(36):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))})),
	    lab(32):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))})),
	    lab(1):(var("foo"):nullTypeRoot()),
	    lab(15):(var("foo"):nullTypeRoot()),
	    lab(40):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})),
	    lab(42):(var("foo"):nullTypeRoot()),
	    lab(43):(var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}))
	  )
	),(
	  "Test.instanceFunc":[
	    dynamicFieldInsertion("Adding field: var(dynamicVarB) to object @ lab(3)."),
	    accessUndefinedClassProperty("Failed to initialize static class property: var(foobar) @ lab(11).")
	  ],
	  "DynamicPropertySetA.php":[
	    dynamicFieldInsertion("Adding field: var(dynamicVarA) to object @ lab(26)."),
	    accessUndefinedClassProperty("Failed to initialize static class property: var(statVar2) @ lab(34)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(40) has Void type."),
	    objChangedState("Object instance: var(foo) changed state in a func. or method body @ lab(40).")
	  ]
	)>;
	return assertEquals(<AppExitEnvms,AppWarnings>,expectInfo,"AppInfo","generate warnings");
}

test bool test_DynamicPropertySetB()
{
	fileTest="DynamicPropertySetB.php";
	exitEnvm=runAnalysis(localP,fileTest);

	expectInfo=
	<(
	  "Test.instanceFunc":(
	    lab(49):(
	      var("this"):nullTypeRoot(),
	      var("x"):nullTypeRoot()
	    ),
	    lab(50):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(51):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(5):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(13):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(9):(
	      var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    )
	  ),
	  "Test.instanceFunc2":(
	    lab(52):(var("this"):nullTypeRoot()),
	    lab(53):(var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})),
	    lab(17):(var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}))
	  ),
	  "DynamicPropertySetB.php":(
	    lab(21):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(48):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})
	    ),
	    lab(18):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):nullTypeRoot()
	    ),
	    lab(31):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))})
	    ),
	    lab(26):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):nullTypeRoot(),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))})
	    ),
	    lab(1):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):nullTypeRoot()
	    ),
	    lab(35):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})
	    ),
	    lab(45):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})
	    ),
	    lab(47):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):nullTypeRoot()
	    ),
	    lab(40):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))})
	    )
	  )
	),(
	  "Test.instanceFunc":[
	    dynamicFieldInsertion("Adding field: var(dynamicVarB) to object @ lab(3)."),
	    accessUndefinedClassProperty("Failed to initialize static class property: var(foobar) @ lab(11).")
	  ],
	  "Test.instanceFunc2":[],
	  "DynamicPropertySetB.php":[
	    dynamicFieldInsertion("Adding field: var(dynamicVarA) to object @ lab(24)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(35) has Void type."),
	    objChangedState("Object instance: var(foo) changed state in a func. or method body @ lab(35).")
	  ]
	)>;	
	
	return assertEquals(<AppExitEnvms,AppWarnings>,expectInfo,"AppInfo","generate warnings");		
}

test bool test_DynamicPropertySetC()
{
	fileTest="DynamicPropertySetC.php";
	exitEnvm=runAnalysis(localP,fileTest);

	expectInfo=
	<(
	  "Test.instanceFunc":(
	    lab(62):(
	      var("this"):nullTypeRoot(),
	      var("x"):nullTypeRoot()
	    ),
	    lab(63):(
	      var("this"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(4):(
	      var("this"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(64):(
	      var("this"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    ),
	    lab(8):(
	      var("this"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("x"):typeSet({Int()})
	    )
	  ),
	  "Test.instanceFunc2":(
	    lab(65):(var("this"):nullTypeRoot()),
	    lab(66):(var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})),
	    lab(12):(var("this"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))}))
	  ),
	  "DynamicPropertySetC.php":(
	    lab(60):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):nullTypeRoot(),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(61):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):typeSet({Void()}),
	      var("tempE"):typeSet({Void()}),
	      var("bar"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(30):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(35):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(44):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(13):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):nullTypeRoot(),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(40):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(53):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):typeSet({Void()}),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(21):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):nullTypeRoot(),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(48):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(16):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    ),
	    lab(58):(
	      var("tempA"):typeSet({Bool()}),
	      var("tempB"):typeSet({Int()}),
	      var("tempC"):typeSet({Int()}),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()}),
	                var("dynamicVarB"):typeSet({Int()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):typeSet({Void()}),
	      var("tempE"):typeSet({Void()}),
	      var("bar"):typeSet({Object(
	            objHd(3),
	            objInst(
	              3,
	              (var("instVar"):nullTypeRoot()),
	              "Test",
	              {}))})
	    ),
	    lab(26):(
	      var("tempA"):nullTypeRoot(),
	      var("tempB"):nullTypeRoot(),
	      var("tempC"):nullTypeRoot(),
	      var("foo"):typeSet({Object(
	            objHd(2),
	            objInst(
	              2,
	              (
	                var("instVar"):typeSet({Float()}),
	                var("dynamicVarA"):typeSet({Bool()})
	              ),
	              "Test",
	              {}))}),
	      var("tempD"):nullTypeRoot(),
	      var("tempE"):nullTypeRoot(),
	      var("bar"):nullTypeRoot()
	    )
	  )
	),(
	  "Test.instanceFunc":[dynamicFieldInsertion("Adding field: var(dynamicVarB) to object @ lab(2).")],
	  "Test.instanceFunc2":[
	    accessUndefinedClassProperty("Attempt to access un-defined object property: var(dynamicVarB) @ lab(12)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(12) has Void type.")
	  ],
	  "DynamicPropertySetC.php":[
	    dynamicFieldInsertion("Adding field: var(dynamicVarA) to object @ lab(19)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(30) has Void type."),
	    objChangedState("Object instance: var(foo) changed state in a func. or method body @ lab(30)."),
	    accessUndefinedClassProperty("Attempt to access un-defined object property: var(dynamicA) @ lab(50)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(50) has Void type."),
	    assignVoidTypeToVar("Assigning a Void type to var(tempD) @ lab(50)."),
	    usingVoidTypeForExpr("Computed typeSet for lab(57) has Void type."),
	    assignVoidTypeToVar("Assigning a Void type to var(tempE) @ lab(55).")
	  ]
	)>;
	
	return assertEquals(<AppExitEnvms,AppWarnings>,expectInfo,"AppInfo","generate warnings");	
}